// Generated by CoffeeScript 1.6.3
(function() {
  var makeSync, objectOptions, phantom, phantomSync, sync, _create, _ref,
    __slice = [].slice;

  _ref = require('make-sync'), sync = _ref.sync, makeSync = _ref.makeSync;

  phantom = require('phantom');

  objectOptions = {
    create: {
      mode: 'sync',
      'sync-return': 'res'
    },
    ph: {
      mode: 'sync',
      exclude: [/^_/, 'exit'],
      'sync-return': 'res',
      num_of_args: {
        set: 2
      }
    },
    page: {
      mode: 'sync',
      exclude: [/^_/, 'sendEvent'],
      'sync-return': 'res',
      num_of_args: {
        set: 2
      }
    }
  };

  _create = function() {
    var args, done, _i;
    args = 2 <= arguments.length ? __slice.call(arguments, 0, _i = arguments.length - 1) : (_i = 0, []), done = arguments[_i++];
    return phantom.create.apply(phantom, __slice.call(args).concat([function(ph) {
      var _createPage;
      _createPage = ph.createPage;
      ph.createPage = function() {
        var args, done, _j;
        args = 2 <= arguments.length ? __slice.call(arguments, 0, _j = arguments.length - 1) : (_j = 0, []), done = arguments[_j++];
        return _createPage.apply(null, __slice.call(args).concat([function(page) {
          var _evaluate;
          _evaluate = page.evaluate;
          page.evaluate = function() {
            var args, cb, fn, _k;
            fn = arguments[0], args = 3 <= arguments.length ? __slice.call(arguments, 1, _k = arguments.length - 1) : (_k = 1, []), cb = arguments[_k++];
            return _evaluate.apply(page, [fn, cb].concat(__slice.call(args)));
          };
          makeSync(page, objectOptions.page);
          return done(page);
        }]));
      };
      ph.exitAndWait = function(ms, done) {
        ph.exit();
        return setTimeout(function() {
          return done();
        }, ms);
      };
      makeSync(ph, objectOptions.ph);
      return done(ph);
    }]));
  };

  _create = makeSync(_create, objectOptions.create);

  phantomSync = {
    phantom: {
      create: _create
    },
    sync: sync
  };

  module.exports = phantomSync;

}).call(this);
